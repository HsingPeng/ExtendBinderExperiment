// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cursor.proto

#include "cursor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
namespace protobuf_cursor_2eproto {
void InitDefaultsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Request_default_instance_;
    new (ptr) ::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Request::InitAsDefaultInstance();
}

void InitDefaultsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestImpl);
}

void InitDefaultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Response_default_instance_;
    new (ptr) ::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Response::InitAsDefaultInstance();
}

void InitDefaultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, columnname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, columnindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, observer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, extras_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, intresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, boolresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, stringresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, bytesresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, stringarrayresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, floatresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, doubleresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, longresult_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Request)},
  { 13, -1, sizeof(::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cursor.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014cursor.proto\"\217\007\n\007Request\022\014\n\004uuid\030\001 \001(\t"
      "\022\037\n\006method\030\002 \001(\0162\017.Request.Method\022\016\n\006off"
      "set\030\003 \001(\005\022\020\n\010position\030\004 \001(\005\022\022\n\ncolumnNam"
      "e\030\005 \001(\t\022\023\n\013columnIndex\030\006 \001(\005\022\020\n\010observer"
      "\030\007 \001(\t\022\016\n\006extras\030\010 \001(\t\"\347\005\n\006Method\022\014\n\010get"
      "Count\020\000\022\017\n\013getPosition\020\001\022\010\n\004move\020\002\022\022\n\016mo"
      "veToPosition\020\003\022\017\n\013moveToFirst\020\004\022\016\n\nmoveT"
      "oLast\020\005\022\016\n\nmoveToNext\020\006\022\022\n\016moveToPreviou"
      "s\020\007\022\013\n\007isFirst\020\010\022\n\n\006isLast\020\t\022\021\n\risBefore"
      "First\020\n\022\017\n\013isAfterLast\020\017\022\022\n\016getColumnInd"
      "ex\020\020\022\031\n\025getColumnIndexOrThrow\020\021\022\021\n\rgetCo"
      "lumnName\020\022\022\022\n\016getColumnNames\020\023\022\022\n\016getCol"
      "umnCount\020\024\022\013\n\007getBlob\020\025\022\r\n\tgetString\020\026\022\026"
      "\n\022copyStringToBuffer\020\027\022\014\n\010getShort\020\030\022\n\n\006"
      "getInt\020\031\022\013\n\007getLong\020\032\022\014\n\010getFloat\020\033\022\r\n\tg"
      "etDouble\020\034\022\013\n\007getType\020\035\022\n\n\006isNull\020\036\022\013\n\007r"
      "equery\020\037\022\t\n\005close\020 \022\014\n\010isClosed\020!\022\033\n\027reg"
      "isterContentObserver\020\"\022\035\n\031unregisterCont"
      "entObserver\020#\022\033\n\027registerDataSetObserver"
      "\020$\022\035\n\031unregisterDataSetObserver\020%\022\026\n\022set"
      "NotificationUri\020&\022\026\n\022getNotificationUri\020"
      "\'\022\032\n\026getWantsAllOnMoveCalls\020(\022\r\n\tsetExtr"
      "as\020)\022\r\n\tgetExtras\020*\022\013\n\007respond\020+\022\016\n\ndeac"
      "tivate\020,\"\263\002\n\010Response\022\014\n\004uuid\030\001 \001(\t\022 \n\006s"
      "tatus\030\002 \001(\0162\020.Response.Status\022\021\n\tintResu"
      "lt\030\003 \001(\005\022\022\n\nboolResult\030\004 \001(\010\022\024\n\014stringRe"
      "sult\030\005 \001(\t\022\023\n\013bytesResult\030\006 \001(\014\022\031\n\021strin"
      "gArrayResult\030\007 \003(\t\022\023\n\013floatResult\030\010 \001(\002\022"
      "\024\n\014doubleResult\030\t \001(\001\022\022\n\nlongResult\030\n \001("
      "\003\"K\n\006Status\022\006\n\002Ok\020\000\022\017\n\013UriNotFound\020\001\022\022\n\016"
      "MethodNotFound\020\002\022\024\n\020MethodNotSupport\020\003B4"
      "\n\'com.github.hsingpeng.extendbinder.prot"
      "oB\tCursorMsgb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1300);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cursor.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cursor_2eproto
const ::google::protobuf::EnumDescriptor* Request_Method_descriptor() {
  protobuf_cursor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cursor_2eproto::file_level_enum_descriptors[0];
}
bool Request_Method_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Request_Method Request::getCount;
const Request_Method Request::getPosition;
const Request_Method Request::move;
const Request_Method Request::moveToPosition;
const Request_Method Request::moveToFirst;
const Request_Method Request::moveToLast;
const Request_Method Request::moveToNext;
const Request_Method Request::moveToPrevious;
const Request_Method Request::isFirst;
const Request_Method Request::isLast;
const Request_Method Request::isBeforeFirst;
const Request_Method Request::isAfterLast;
const Request_Method Request::getColumnIndex;
const Request_Method Request::getColumnIndexOrThrow;
const Request_Method Request::getColumnName;
const Request_Method Request::getColumnNames;
const Request_Method Request::getColumnCount;
const Request_Method Request::getBlob;
const Request_Method Request::getString;
const Request_Method Request::copyStringToBuffer;
const Request_Method Request::getShort;
const Request_Method Request::getInt;
const Request_Method Request::getLong;
const Request_Method Request::getFloat;
const Request_Method Request::getDouble;
const Request_Method Request::getType;
const Request_Method Request::isNull;
const Request_Method Request::requery;
const Request_Method Request::close;
const Request_Method Request::isClosed;
const Request_Method Request::registerContentObserver;
const Request_Method Request::unregisterContentObserver;
const Request_Method Request::registerDataSetObserver;
const Request_Method Request::unregisterDataSetObserver;
const Request_Method Request::setNotificationUri;
const Request_Method Request::getNotificationUri;
const Request_Method Request::getWantsAllOnMoveCalls;
const Request_Method Request::setExtras;
const Request_Method Request::getExtras;
const Request_Method Request::respond;
const Request_Method Request::deactivate;
const Request_Method Request::Method_MIN;
const Request_Method Request::Method_MAX;
const int Request::Method_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Response_Status_descriptor() {
  protobuf_cursor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cursor_2eproto::file_level_enum_descriptors[1];
}
bool Response_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Response_Status Response::Ok;
const Response_Status Response::UriNotFound;
const Response_Status Response::MethodNotFound;
const Response_Status Response::MethodNotSupport;
const Response_Status Response::Status_MIN;
const Response_Status Response::Status_MAX;
const int Response::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kUuidFieldNumber;
const int Request::kMethodFieldNumber;
const int Request::kOffsetFieldNumber;
const int Request::kPositionFieldNumber;
const int Request::kColumnNameFieldNumber;
const int Request::kColumnIndexFieldNumber;
const int Request::kObserverFieldNumber;
const int Request::kExtrasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cursor_2eproto::InitDefaultsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  columnname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.columnname().size() > 0) {
    columnname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnname_);
  }
  observer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.observer().size() > 0) {
    observer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.observer_);
  }
  extras_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extras().size() > 0) {
    extras_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extras_);
  }
  ::memcpy(&method_, &from.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&columnindex_) -
    reinterpret_cast<char*>(&method_)) + sizeof(columnindex_));
  // @@protoc_insertion_point(copy_constructor:Request)
}

void Request::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  observer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extras_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&columnindex_) -
      reinterpret_cast<char*>(&method_)) + sizeof(columnindex_));
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Request)
  SharedDtor();
}

void Request::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  observer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extras_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_cursor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cursor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::protobuf_cursor_2eproto::InitDefaultsRequest();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  observer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extras_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&columnindex_) -
      reinterpret_cast<char*>(&method_)) + sizeof(columnindex_));
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Request.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Request.Method method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::Request_Method >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string columnName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_columnname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->columnname().data(), static_cast<int>(this->columnname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Request.columnName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 columnIndex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &columnindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string observer = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_observer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->observer().data(), static_cast<int>(this->observer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Request.observer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extras = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extras()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extras().data(), static_cast<int>(this->extras().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Request.extras"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  // .Request.Method method = 2;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->method(), output);
  }

  // int32 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->offset(), output);
  }

  // int32 position = 4;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->position(), output);
  }

  // string columnName = 5;
  if (this->columnname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnname().data(), static_cast<int>(this->columnname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.columnName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->columnname(), output);
  }

  // int32 columnIndex = 6;
  if (this->columnindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->columnindex(), output);
  }

  // string observer = 7;
  if (this->observer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->observer().data(), static_cast<int>(this->observer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.observer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->observer(), output);
  }

  // string extras = 8;
  if (this->extras().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extras().data(), static_cast<int>(this->extras().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.extras");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->extras(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  // .Request.Method method = 2;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->method(), target);
  }

  // int32 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->offset(), target);
  }

  // int32 position = 4;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->position(), target);
  }

  // string columnName = 5;
  if (this->columnname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnname().data(), static_cast<int>(this->columnname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.columnName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->columnname(), target);
  }

  // int32 columnIndex = 6;
  if (this->columnindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->columnindex(), target);
  }

  // string observer = 7;
  if (this->observer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->observer().data(), static_cast<int>(this->observer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.observer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->observer(), target);
  }

  // string extras = 8;
  if (this->extras().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extras().data(), static_cast<int>(this->extras().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Request.extras");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->extras(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string columnName = 5;
  if (this->columnname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->columnname());
  }

  // string observer = 7;
  if (this->observer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->observer());
  }

  // string extras = 8;
  if (this->extras().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extras());
  }

  // .Request.Method method = 2;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  // int32 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // int32 position = 4;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  // int32 columnIndex = 6;
  if (this->columnindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->columnindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.columnname().size() > 0) {

    columnname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnname_);
  }
  if (from.observer().size() > 0) {

    observer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.observer_);
  }
  if (from.extras().size() > 0) {

    extras_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extras_);
  }
  if (from.method() != 0) {
    set_method(from.method());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.columnindex() != 0) {
    set_columnindex(from.columnindex());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  columnname_.Swap(&other->columnname_);
  observer_.Swap(&other->observer_);
  extras_.Swap(&other->extras_);
  swap(method_, other->method_);
  swap(offset_, other->offset_);
  swap(position_, other->position_);
  swap(columnindex_, other->columnindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_cursor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cursor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kUuidFieldNumber;
const int Response::kStatusFieldNumber;
const int Response::kIntResultFieldNumber;
const int Response::kBoolResultFieldNumber;
const int Response::kStringResultFieldNumber;
const int Response::kBytesResultFieldNumber;
const int Response::kStringArrayResultFieldNumber;
const int Response::kFloatResultFieldNumber;
const int Response::kDoubleResultFieldNumber;
const int Response::kLongResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cursor_2eproto::InitDefaultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stringarrayresult_(from.stringarrayresult_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  stringresult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stringresult().size() > 0) {
    stringresult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stringresult_);
  }
  bytesresult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytesresult().size() > 0) {
    bytesresult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytesresult_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&longresult_) -
    reinterpret_cast<char*>(&status_)) + sizeof(longresult_));
  // @@protoc_insertion_point(copy_constructor:Response)
}

void Response::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stringresult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytesresult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longresult_) -
      reinterpret_cast<char*>(&status_)) + sizeof(longresult_));
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Response)
  SharedDtor();
}

void Response::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stringresult_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytesresult_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_cursor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cursor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::protobuf_cursor_2eproto::InitDefaultsResponse();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stringarrayresult_.Clear();
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stringresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytesresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longresult_) -
      reinterpret_cast<char*>(&status_)) + sizeof(longresult_));
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Response.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Response.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::Response_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intResult = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolResult = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boolresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stringResult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringresult()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringresult().data(), static_cast<int>(this->stringresult().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Response.stringResult"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytesResult = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytesresult()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string stringArrayResult = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stringarrayresult()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringarrayresult(this->stringarrayresult_size() - 1).data(),
            static_cast<int>(this->stringarrayresult(this->stringarrayresult_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Response.stringArrayResult"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float floatResult = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &floatresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double doubleResult = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &doubleresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 longResult = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &longresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  // .Response.Status status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // int32 intResult = 3;
  if (this->intresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intresult(), output);
  }

  // bool boolResult = 4;
  if (this->boolresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->boolresult(), output);
  }

  // string stringResult = 5;
  if (this->stringresult().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringresult().data(), static_cast<int>(this->stringresult().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.stringResult");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stringresult(), output);
  }

  // bytes bytesResult = 6;
  if (this->bytesresult().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->bytesresult(), output);
  }

  // repeated string stringArrayResult = 7;
  for (int i = 0, n = this->stringarrayresult_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringarrayresult(i).data(), static_cast<int>(this->stringarrayresult(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.stringArrayResult");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->stringarrayresult(i), output);
  }

  // float floatResult = 8;
  if (this->floatresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->floatresult(), output);
  }

  // double doubleResult = 9;
  if (this->doubleresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->doubleresult(), output);
  }

  // int64 longResult = 10;
  if (this->longresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->longresult(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  // .Response.Status status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // int32 intResult = 3;
  if (this->intresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intresult(), target);
  }

  // bool boolResult = 4;
  if (this->boolresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->boolresult(), target);
  }

  // string stringResult = 5;
  if (this->stringresult().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringresult().data(), static_cast<int>(this->stringresult().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.stringResult");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stringresult(), target);
  }

  // bytes bytesResult = 6;
  if (this->bytesresult().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->bytesresult(), target);
  }

  // repeated string stringArrayResult = 7;
  for (int i = 0, n = this->stringarrayresult_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringarrayresult(i).data(), static_cast<int>(this->stringarrayresult(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.stringArrayResult");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->stringarrayresult(i), target);
  }

  // float floatResult = 8;
  if (this->floatresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->floatresult(), target);
  }

  // double doubleResult = 9;
  if (this->doubleresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->doubleresult(), target);
  }

  // int64 longResult = 10;
  if (this->longresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->longresult(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string stringArrayResult = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stringarrayresult_size());
  for (int i = 0, n = this->stringarrayresult_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stringarrayresult(i));
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string stringResult = 5;
  if (this->stringresult().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stringresult());
  }

  // bytes bytesResult = 6;
  if (this->bytesresult().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytesresult());
  }

  // .Response.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 intResult = 3;
  if (this->intresult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intresult());
  }

  // bool boolResult = 4;
  if (this->boolresult() != 0) {
    total_size += 1 + 1;
  }

  // float floatResult = 8;
  if (this->floatresult() != 0) {
    total_size += 1 + 4;
  }

  // double doubleResult = 9;
  if (this->doubleresult() != 0) {
    total_size += 1 + 8;
  }

  // int64 longResult = 10;
  if (this->longresult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->longresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stringarrayresult_.MergeFrom(from.stringarrayresult_);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.stringresult().size() > 0) {

    stringresult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stringresult_);
  }
  if (from.bytesresult().size() > 0) {

    bytesresult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytesresult_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.intresult() != 0) {
    set_intresult(from.intresult());
  }
  if (from.boolresult() != 0) {
    set_boolresult(from.boolresult());
  }
  if (from.floatresult() != 0) {
    set_floatresult(from.floatresult());
  }
  if (from.doubleresult() != 0) {
    set_doubleresult(from.doubleresult());
  }
  if (from.longresult() != 0) {
    set_longresult(from.longresult());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  stringarrayresult_.InternalSwap(&other->stringarrayresult_);
  uuid_.Swap(&other->uuid_);
  stringresult_.Swap(&other->stringresult_);
  bytesresult_.Swap(&other->bytesresult_);
  swap(status_, other->status_);
  swap(intresult_, other->intresult_);
  swap(boolresult_, other->boolresult_);
  swap(floatresult_, other->floatresult_);
  swap(doubleresult_, other->doubleresult_);
  swap(longresult_, other->longresult_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_cursor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cursor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
