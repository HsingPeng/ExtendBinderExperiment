// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cursor.proto

#ifndef PROTOBUF_cursor_2eproto__INCLUDED
#define PROTOBUF_cursor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_cursor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsRequest();
  InitDefaultsResponse();
}
}  // namespace protobuf_cursor_2eproto
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;

enum Request_Method {
  Request_Method_getCount = 0,
  Request_Method_getPosition = 1,
  Request_Method_move = 2,
  Request_Method_moveToPosition = 3,
  Request_Method_moveToFirst = 4,
  Request_Method_moveToLast = 5,
  Request_Method_moveToNext = 6,
  Request_Method_moveToPrevious = 7,
  Request_Method_isFirst = 8,
  Request_Method_isLast = 9,
  Request_Method_isBeforeFirst = 10,
  Request_Method_isAfterLast = 15,
  Request_Method_getColumnIndex = 16,
  Request_Method_getColumnIndexOrThrow = 17,
  Request_Method_getColumnName = 18,
  Request_Method_getColumnNames = 19,
  Request_Method_getColumnCount = 20,
  Request_Method_getBlob = 21,
  Request_Method_getString = 22,
  Request_Method_copyStringToBuffer = 23,
  Request_Method_getShort = 24,
  Request_Method_getInt = 25,
  Request_Method_getLong = 26,
  Request_Method_getFloat = 27,
  Request_Method_getDouble = 28,
  Request_Method_getType = 29,
  Request_Method_isNull = 30,
  Request_Method_requery = 31,
  Request_Method_close = 32,
  Request_Method_isClosed = 33,
  Request_Method_registerContentObserver = 34,
  Request_Method_unregisterContentObserver = 35,
  Request_Method_registerDataSetObserver = 36,
  Request_Method_unregisterDataSetObserver = 37,
  Request_Method_setNotificationUri = 38,
  Request_Method_getNotificationUri = 39,
  Request_Method_getWantsAllOnMoveCalls = 40,
  Request_Method_setExtras = 41,
  Request_Method_getExtras = 42,
  Request_Method_respond = 43,
  Request_Method_deactivate = 44,
  Request_Method_Request_Method_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Request_Method_Request_Method_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Request_Method_IsValid(int value);
const Request_Method Request_Method_Method_MIN = Request_Method_getCount;
const Request_Method Request_Method_Method_MAX = Request_Method_deactivate;
const int Request_Method_Method_ARRAYSIZE = Request_Method_Method_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Method_descriptor();
inline const ::std::string& Request_Method_Name(Request_Method value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Method_descriptor(), value);
}
inline bool Request_Method_Parse(
    const ::std::string& name, Request_Method* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Method>(
    Request_Method_descriptor(), name, value);
}
enum Response_Status {
  Response_Status_Ok = 0,
  Response_Status_UriNotFound = 1,
  Response_Status_MethodNotFound = 2,
  Response_Status_MethodNotSupport = 3,
  Response_Status_Response_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Response_Status_Response_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Response_Status_IsValid(int value);
const Response_Status Response_Status_Status_MIN = Response_Status_Ok;
const Response_Status Response_Status_Status_MAX = Response_Status_MethodNotSupport;
const int Response_Status_Status_ARRAYSIZE = Response_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_Status_descriptor();
inline const ::std::string& Response_Status_Name(Response_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_Status_descriptor(), value);
}
inline bool Response_Status_Parse(
    const ::std::string& name, Response_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_Status>(
    Response_Status_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Request_Method Method;
  static const Method getCount =
    Request_Method_getCount;
  static const Method getPosition =
    Request_Method_getPosition;
  static const Method move =
    Request_Method_move;
  static const Method moveToPosition =
    Request_Method_moveToPosition;
  static const Method moveToFirst =
    Request_Method_moveToFirst;
  static const Method moveToLast =
    Request_Method_moveToLast;
  static const Method moveToNext =
    Request_Method_moveToNext;
  static const Method moveToPrevious =
    Request_Method_moveToPrevious;
  static const Method isFirst =
    Request_Method_isFirst;
  static const Method isLast =
    Request_Method_isLast;
  static const Method isBeforeFirst =
    Request_Method_isBeforeFirst;
  static const Method isAfterLast =
    Request_Method_isAfterLast;
  static const Method getColumnIndex =
    Request_Method_getColumnIndex;
  static const Method getColumnIndexOrThrow =
    Request_Method_getColumnIndexOrThrow;
  static const Method getColumnName =
    Request_Method_getColumnName;
  static const Method getColumnNames =
    Request_Method_getColumnNames;
  static const Method getColumnCount =
    Request_Method_getColumnCount;
  static const Method getBlob =
    Request_Method_getBlob;
  static const Method getString =
    Request_Method_getString;
  static const Method copyStringToBuffer =
    Request_Method_copyStringToBuffer;
  static const Method getShort =
    Request_Method_getShort;
  static const Method getInt =
    Request_Method_getInt;
  static const Method getLong =
    Request_Method_getLong;
  static const Method getFloat =
    Request_Method_getFloat;
  static const Method getDouble =
    Request_Method_getDouble;
  static const Method getType =
    Request_Method_getType;
  static const Method isNull =
    Request_Method_isNull;
  static const Method requery =
    Request_Method_requery;
  static const Method close =
    Request_Method_close;
  static const Method isClosed =
    Request_Method_isClosed;
  static const Method registerContentObserver =
    Request_Method_registerContentObserver;
  static const Method unregisterContentObserver =
    Request_Method_unregisterContentObserver;
  static const Method registerDataSetObserver =
    Request_Method_registerDataSetObserver;
  static const Method unregisterDataSetObserver =
    Request_Method_unregisterDataSetObserver;
  static const Method setNotificationUri =
    Request_Method_setNotificationUri;
  static const Method getNotificationUri =
    Request_Method_getNotificationUri;
  static const Method getWantsAllOnMoveCalls =
    Request_Method_getWantsAllOnMoveCalls;
  static const Method setExtras =
    Request_Method_setExtras;
  static const Method getExtras =
    Request_Method_getExtras;
  static const Method respond =
    Request_Method_respond;
  static const Method deactivate =
    Request_Method_deactivate;
  static inline bool Method_IsValid(int value) {
    return Request_Method_IsValid(value);
  }
  static const Method Method_MIN =
    Request_Method_Method_MIN;
  static const Method Method_MAX =
    Request_Method_Method_MAX;
  static const int Method_ARRAYSIZE =
    Request_Method_Method_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Method_descriptor() {
    return Request_Method_descriptor();
  }
  static inline const ::std::string& Method_Name(Method value) {
    return Request_Method_Name(value);
  }
  static inline bool Method_Parse(const ::std::string& name,
      Method* value) {
    return Request_Method_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string columnName = 5;
  void clear_columnname();
  static const int kColumnNameFieldNumber = 5;
  const ::std::string& columnname() const;
  void set_columnname(const ::std::string& value);
  #if LANG_CXX11
  void set_columnname(::std::string&& value);
  #endif
  void set_columnname(const char* value);
  void set_columnname(const char* value, size_t size);
  ::std::string* mutable_columnname();
  ::std::string* release_columnname();
  void set_allocated_columnname(::std::string* columnname);

  // string observer = 7;
  void clear_observer();
  static const int kObserverFieldNumber = 7;
  const ::std::string& observer() const;
  void set_observer(const ::std::string& value);
  #if LANG_CXX11
  void set_observer(::std::string&& value);
  #endif
  void set_observer(const char* value);
  void set_observer(const char* value, size_t size);
  ::std::string* mutable_observer();
  ::std::string* release_observer();
  void set_allocated_observer(::std::string* observer);

  // string extras = 8;
  void clear_extras();
  static const int kExtrasFieldNumber = 8;
  const ::std::string& extras() const;
  void set_extras(const ::std::string& value);
  #if LANG_CXX11
  void set_extras(::std::string&& value);
  #endif
  void set_extras(const char* value);
  void set_extras(const char* value, size_t size);
  ::std::string* mutable_extras();
  ::std::string* release_extras();
  void set_allocated_extras(::std::string* extras);

  // .Request.Method method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  ::Request_Method method() const;
  void set_method(::Request_Method value);

  // int32 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 position = 4;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // int32 columnIndex = 6;
  void clear_columnindex();
  static const int kColumnIndexFieldNumber = 6;
  ::google::protobuf::int32 columnindex() const;
  void set_columnindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr columnname_;
  ::google::protobuf::internal::ArenaStringPtr observer_;
  ::google::protobuf::internal::ArenaStringPtr extras_;
  int method_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 columnindex_;
  mutable int _cached_size_;
  friend struct ::protobuf_cursor_2eproto::TableStruct;
  friend void ::protobuf_cursor_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Response_Status Status;
  static const Status Ok =
    Response_Status_Ok;
  static const Status UriNotFound =
    Response_Status_UriNotFound;
  static const Status MethodNotFound =
    Response_Status_MethodNotFound;
  static const Status MethodNotSupport =
    Response_Status_MethodNotSupport;
  static inline bool Status_IsValid(int value) {
    return Response_Status_IsValid(value);
  }
  static const Status Status_MIN =
    Response_Status_Status_MIN;
  static const Status Status_MAX =
    Response_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    Response_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return Response_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return Response_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return Response_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string stringArrayResult = 7;
  int stringarrayresult_size() const;
  void clear_stringarrayresult();
  static const int kStringArrayResultFieldNumber = 7;
  const ::std::string& stringarrayresult(int index) const;
  ::std::string* mutable_stringarrayresult(int index);
  void set_stringarrayresult(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_stringarrayresult(int index, ::std::string&& value);
  #endif
  void set_stringarrayresult(int index, const char* value);
  void set_stringarrayresult(int index, const char* value, size_t size);
  ::std::string* add_stringarrayresult();
  void add_stringarrayresult(const ::std::string& value);
  #if LANG_CXX11
  void add_stringarrayresult(::std::string&& value);
  #endif
  void add_stringarrayresult(const char* value);
  void add_stringarrayresult(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& stringarrayresult() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stringarrayresult();

  // string uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string stringResult = 5;
  void clear_stringresult();
  static const int kStringResultFieldNumber = 5;
  const ::std::string& stringresult() const;
  void set_stringresult(const ::std::string& value);
  #if LANG_CXX11
  void set_stringresult(::std::string&& value);
  #endif
  void set_stringresult(const char* value);
  void set_stringresult(const char* value, size_t size);
  ::std::string* mutable_stringresult();
  ::std::string* release_stringresult();
  void set_allocated_stringresult(::std::string* stringresult);

  // bytes bytesResult = 6;
  void clear_bytesresult();
  static const int kBytesResultFieldNumber = 6;
  const ::std::string& bytesresult() const;
  void set_bytesresult(const ::std::string& value);
  #if LANG_CXX11
  void set_bytesresult(::std::string&& value);
  #endif
  void set_bytesresult(const char* value);
  void set_bytesresult(const void* value, size_t size);
  ::std::string* mutable_bytesresult();
  ::std::string* release_bytesresult();
  void set_allocated_bytesresult(::std::string* bytesresult);

  // .Response.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::Response_Status status() const;
  void set_status(::Response_Status value);

  // int32 intResult = 3;
  void clear_intresult();
  static const int kIntResultFieldNumber = 3;
  ::google::protobuf::int32 intresult() const;
  void set_intresult(::google::protobuf::int32 value);

  // bool boolResult = 4;
  void clear_boolresult();
  static const int kBoolResultFieldNumber = 4;
  bool boolresult() const;
  void set_boolresult(bool value);

  // float floatResult = 8;
  void clear_floatresult();
  static const int kFloatResultFieldNumber = 8;
  float floatresult() const;
  void set_floatresult(float value);

  // double doubleResult = 9;
  void clear_doubleresult();
  static const int kDoubleResultFieldNumber = 9;
  double doubleresult() const;
  void set_doubleresult(double value);

  // int64 longResult = 10;
  void clear_longresult();
  static const int kLongResultFieldNumber = 10;
  ::google::protobuf::int64 longresult() const;
  void set_longresult(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> stringarrayresult_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr stringresult_;
  ::google::protobuf::internal::ArenaStringPtr bytesresult_;
  int status_;
  ::google::protobuf::int32 intresult_;
  bool boolresult_;
  float floatresult_;
  double doubleresult_;
  ::google::protobuf::int64 longresult_;
  mutable int _cached_size_;
  friend struct ::protobuf_cursor_2eproto::TableStruct;
  friend void ::protobuf_cursor_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request

// string uuid = 1;
inline void Request::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::uuid() const {
  // @@protoc_insertion_point(field_get:Request.uuid)
  return uuid_.GetNoArena();
}
inline void Request::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.uuid)
}
#if LANG_CXX11
inline void Request::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Request.uuid)
}
#endif
inline void Request::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.uuid)
}
inline void Request::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.uuid)
}
inline ::std::string* Request::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:Request.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_uuid() {
  // @@protoc_insertion_point(field_release:Request.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:Request.uuid)
}

// .Request.Method method = 2;
inline void Request::clear_method() {
  method_ = 0;
}
inline ::Request_Method Request::method() const {
  // @@protoc_insertion_point(field_get:Request.method)
  return static_cast< ::Request_Method >(method_);
}
inline void Request::set_method(::Request_Method value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:Request.method)
}

// int32 offset = 3;
inline void Request::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 Request::offset() const {
  // @@protoc_insertion_point(field_get:Request.offset)
  return offset_;
}
inline void Request::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:Request.offset)
}

// int32 position = 4;
inline void Request::clear_position() {
  position_ = 0;
}
inline ::google::protobuf::int32 Request::position() const {
  // @@protoc_insertion_point(field_get:Request.position)
  return position_;
}
inline void Request::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:Request.position)
}

// string columnName = 5;
inline void Request::clear_columnname() {
  columnname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::columnname() const {
  // @@protoc_insertion_point(field_get:Request.columnName)
  return columnname_.GetNoArena();
}
inline void Request::set_columnname(const ::std::string& value) {
  
  columnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.columnName)
}
#if LANG_CXX11
inline void Request::set_columnname(::std::string&& value) {
  
  columnname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Request.columnName)
}
#endif
inline void Request::set_columnname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  columnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.columnName)
}
inline void Request::set_columnname(const char* value, size_t size) {
  
  columnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.columnName)
}
inline ::std::string* Request::mutable_columnname() {
  
  // @@protoc_insertion_point(field_mutable:Request.columnName)
  return columnname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_columnname() {
  // @@protoc_insertion_point(field_release:Request.columnName)
  
  return columnname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_columnname(::std::string* columnname) {
  if (columnname != NULL) {
    
  } else {
    
  }
  columnname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), columnname);
  // @@protoc_insertion_point(field_set_allocated:Request.columnName)
}

// int32 columnIndex = 6;
inline void Request::clear_columnindex() {
  columnindex_ = 0;
}
inline ::google::protobuf::int32 Request::columnindex() const {
  // @@protoc_insertion_point(field_get:Request.columnIndex)
  return columnindex_;
}
inline void Request::set_columnindex(::google::protobuf::int32 value) {
  
  columnindex_ = value;
  // @@protoc_insertion_point(field_set:Request.columnIndex)
}

// string observer = 7;
inline void Request::clear_observer() {
  observer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::observer() const {
  // @@protoc_insertion_point(field_get:Request.observer)
  return observer_.GetNoArena();
}
inline void Request::set_observer(const ::std::string& value) {
  
  observer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.observer)
}
#if LANG_CXX11
inline void Request::set_observer(::std::string&& value) {
  
  observer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Request.observer)
}
#endif
inline void Request::set_observer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  observer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.observer)
}
inline void Request::set_observer(const char* value, size_t size) {
  
  observer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.observer)
}
inline ::std::string* Request::mutable_observer() {
  
  // @@protoc_insertion_point(field_mutable:Request.observer)
  return observer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_observer() {
  // @@protoc_insertion_point(field_release:Request.observer)
  
  return observer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_observer(::std::string* observer) {
  if (observer != NULL) {
    
  } else {
    
  }
  observer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), observer);
  // @@protoc_insertion_point(field_set_allocated:Request.observer)
}

// string extras = 8;
inline void Request::clear_extras() {
  extras_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::extras() const {
  // @@protoc_insertion_point(field_get:Request.extras)
  return extras_.GetNoArena();
}
inline void Request::set_extras(const ::std::string& value) {
  
  extras_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.extras)
}
#if LANG_CXX11
inline void Request::set_extras(::std::string&& value) {
  
  extras_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Request.extras)
}
#endif
inline void Request::set_extras(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extras_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.extras)
}
inline void Request::set_extras(const char* value, size_t size) {
  
  extras_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.extras)
}
inline ::std::string* Request::mutable_extras() {
  
  // @@protoc_insertion_point(field_mutable:Request.extras)
  return extras_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_extras() {
  // @@protoc_insertion_point(field_release:Request.extras)
  
  return extras_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_extras(::std::string* extras) {
  if (extras != NULL) {
    
  } else {
    
  }
  extras_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extras);
  // @@protoc_insertion_point(field_set_allocated:Request.extras)
}

// -------------------------------------------------------------------

// Response

// string uuid = 1;
inline void Response::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::uuid() const {
  // @@protoc_insertion_point(field_get:Response.uuid)
  return uuid_.GetNoArena();
}
inline void Response::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.uuid)
}
#if LANG_CXX11
inline void Response::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Response.uuid)
}
#endif
inline void Response::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.uuid)
}
inline void Response::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.uuid)
}
inline ::std::string* Response::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:Response.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_uuid() {
  // @@protoc_insertion_point(field_release:Response.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:Response.uuid)
}

// .Response.Status status = 2;
inline void Response::clear_status() {
  status_ = 0;
}
inline ::Response_Status Response::status() const {
  // @@protoc_insertion_point(field_get:Response.status)
  return static_cast< ::Response_Status >(status_);
}
inline void Response::set_status(::Response_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:Response.status)
}

// int32 intResult = 3;
inline void Response::clear_intresult() {
  intresult_ = 0;
}
inline ::google::protobuf::int32 Response::intresult() const {
  // @@protoc_insertion_point(field_get:Response.intResult)
  return intresult_;
}
inline void Response::set_intresult(::google::protobuf::int32 value) {
  
  intresult_ = value;
  // @@protoc_insertion_point(field_set:Response.intResult)
}

// bool boolResult = 4;
inline void Response::clear_boolresult() {
  boolresult_ = false;
}
inline bool Response::boolresult() const {
  // @@protoc_insertion_point(field_get:Response.boolResult)
  return boolresult_;
}
inline void Response::set_boolresult(bool value) {
  
  boolresult_ = value;
  // @@protoc_insertion_point(field_set:Response.boolResult)
}

// string stringResult = 5;
inline void Response::clear_stringresult() {
  stringresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::stringresult() const {
  // @@protoc_insertion_point(field_get:Response.stringResult)
  return stringresult_.GetNoArena();
}
inline void Response::set_stringresult(const ::std::string& value) {
  
  stringresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.stringResult)
}
#if LANG_CXX11
inline void Response::set_stringresult(::std::string&& value) {
  
  stringresult_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Response.stringResult)
}
#endif
inline void Response::set_stringresult(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stringresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.stringResult)
}
inline void Response::set_stringresult(const char* value, size_t size) {
  
  stringresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.stringResult)
}
inline ::std::string* Response::mutable_stringresult() {
  
  // @@protoc_insertion_point(field_mutable:Response.stringResult)
  return stringresult_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_stringresult() {
  // @@protoc_insertion_point(field_release:Response.stringResult)
  
  return stringresult_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_stringresult(::std::string* stringresult) {
  if (stringresult != NULL) {
    
  } else {
    
  }
  stringresult_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringresult);
  // @@protoc_insertion_point(field_set_allocated:Response.stringResult)
}

// bytes bytesResult = 6;
inline void Response::clear_bytesresult() {
  bytesresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::bytesresult() const {
  // @@protoc_insertion_point(field_get:Response.bytesResult)
  return bytesresult_.GetNoArena();
}
inline void Response::set_bytesresult(const ::std::string& value) {
  
  bytesresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.bytesResult)
}
#if LANG_CXX11
inline void Response::set_bytesresult(::std::string&& value) {
  
  bytesresult_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Response.bytesResult)
}
#endif
inline void Response::set_bytesresult(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytesresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.bytesResult)
}
inline void Response::set_bytesresult(const void* value, size_t size) {
  
  bytesresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.bytesResult)
}
inline ::std::string* Response::mutable_bytesresult() {
  
  // @@protoc_insertion_point(field_mutable:Response.bytesResult)
  return bytesresult_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_bytesresult() {
  // @@protoc_insertion_point(field_release:Response.bytesResult)
  
  return bytesresult_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_bytesresult(::std::string* bytesresult) {
  if (bytesresult != NULL) {
    
  } else {
    
  }
  bytesresult_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytesresult);
  // @@protoc_insertion_point(field_set_allocated:Response.bytesResult)
}

// repeated string stringArrayResult = 7;
inline int Response::stringarrayresult_size() const {
  return stringarrayresult_.size();
}
inline void Response::clear_stringarrayresult() {
  stringarrayresult_.Clear();
}
inline const ::std::string& Response::stringarrayresult(int index) const {
  // @@protoc_insertion_point(field_get:Response.stringArrayResult)
  return stringarrayresult_.Get(index);
}
inline ::std::string* Response::mutable_stringarrayresult(int index) {
  // @@protoc_insertion_point(field_mutable:Response.stringArrayResult)
  return stringarrayresult_.Mutable(index);
}
inline void Response::set_stringarrayresult(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Response.stringArrayResult)
  stringarrayresult_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Response::set_stringarrayresult(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Response.stringArrayResult)
  stringarrayresult_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Response::set_stringarrayresult(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stringarrayresult_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Response.stringArrayResult)
}
inline void Response::set_stringarrayresult(int index, const char* value, size_t size) {
  stringarrayresult_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Response.stringArrayResult)
}
inline ::std::string* Response::add_stringarrayresult() {
  // @@protoc_insertion_point(field_add_mutable:Response.stringArrayResult)
  return stringarrayresult_.Add();
}
inline void Response::add_stringarrayresult(const ::std::string& value) {
  stringarrayresult_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Response.stringArrayResult)
}
#if LANG_CXX11
inline void Response::add_stringarrayresult(::std::string&& value) {
  stringarrayresult_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Response.stringArrayResult)
}
#endif
inline void Response::add_stringarrayresult(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stringarrayresult_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Response.stringArrayResult)
}
inline void Response::add_stringarrayresult(const char* value, size_t size) {
  stringarrayresult_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Response.stringArrayResult)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Response::stringarrayresult() const {
  // @@protoc_insertion_point(field_list:Response.stringArrayResult)
  return stringarrayresult_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Response::mutable_stringarrayresult() {
  // @@protoc_insertion_point(field_mutable_list:Response.stringArrayResult)
  return &stringarrayresult_;
}

// float floatResult = 8;
inline void Response::clear_floatresult() {
  floatresult_ = 0;
}
inline float Response::floatresult() const {
  // @@protoc_insertion_point(field_get:Response.floatResult)
  return floatresult_;
}
inline void Response::set_floatresult(float value) {
  
  floatresult_ = value;
  // @@protoc_insertion_point(field_set:Response.floatResult)
}

// double doubleResult = 9;
inline void Response::clear_doubleresult() {
  doubleresult_ = 0;
}
inline double Response::doubleresult() const {
  // @@protoc_insertion_point(field_get:Response.doubleResult)
  return doubleresult_;
}
inline void Response::set_doubleresult(double value) {
  
  doubleresult_ = value;
  // @@protoc_insertion_point(field_set:Response.doubleResult)
}

// int64 longResult = 10;
inline void Response::clear_longresult() {
  longresult_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Response::longresult() const {
  // @@protoc_insertion_point(field_get:Response.longResult)
  return longresult_;
}
inline void Response::set_longresult(::google::protobuf::int64 value) {
  
  longresult_ = value;
  // @@protoc_insertion_point(field_set:Response.longResult)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Request_Method> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Request_Method>() {
  return ::Request_Method_descriptor();
}
template <> struct is_proto_enum< ::Response_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Response_Status>() {
  return ::Response_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cursor_2eproto__INCLUDED
